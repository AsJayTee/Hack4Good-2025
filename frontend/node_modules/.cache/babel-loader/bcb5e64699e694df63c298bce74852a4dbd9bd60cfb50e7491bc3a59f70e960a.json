{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shavo\\\\OneDrive\\\\Desktop\\\\frontend\\\\src\\\\Components\\\\Search\\\\Search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { read, utils } from 'xlsx'; // Import the required functions directly\nimport './Search.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExcelSearch = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = event => {\n      const binaryStr = event.target.result;\n      const workbook = read(binaryStr, {\n        type: 'binary'\n      }); // Use named import 'read'\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\n      const jsonData = utils.sheet_to_json(sheet); // Use named import 'utils.sheet_to_json'\n      setProducts(jsonData);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const filteredProducts = products.filter(product => {\n    var _product$Product_Name;\n    return (_product$Product_Name = product.Product_Name) === null || _product$Product_Name === void 0 ? void 0 : _product$Product_Name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Product Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a product\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [product.Product_Name, \" - \", product.Quantity, \" - \", product.Point_Cost]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ExcelSearch, \"HpWa+qB33QuP7+gj0fAdK3CsShE=\");\n_c = ExcelSearch;\nexport default ExcelSearch;\nvar _c;\n$RefreshReg$(_c, \"ExcelSearch\");","map":{"version":3,"names":["React","useState","read","utils","jsxDEV","_jsxDEV","ExcelSearch","_s","products","setProducts","searchTerm","setSearchTerm","handleFileUpload","e","file","target","files","reader","FileReader","onload","event","binaryStr","result","workbook","type","sheet","Sheets","SheetNames","jsonData","sheet_to_json","readAsBinaryString","filteredProducts","filter","product","_product$Product_Name","Product_Name","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","map","index","Quantity","Point_Cost","_c","$RefreshReg$"],"sources":["C:/Users/shavo/OneDrive/Desktop/frontend/src/Components/Search/Search.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { read, utils } from 'xlsx'; // Import the required functions directly\r\nimport './Search.css';\r\n\r\nconst ExcelSearch = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  const handleFileUpload = (e) => {\r\n    const file = e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event) => {\r\n      const binaryStr = event.target.result;\r\n      const workbook = read(binaryStr, { type: 'binary' }); // Use named import 'read'\r\n      const sheet = workbook.Sheets[workbook.SheetNames[0]];\r\n      const jsonData = utils.sheet_to_json(sheet); // Use named import 'utils.sheet_to_json'\r\n      setProducts(jsonData);\r\n    };\r\n\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const filteredProducts = products.filter(product =>\r\n    product.Product_Name?.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <h1>Product Search</h1>\r\n\r\n      {/* Search Bar */}\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search for a product\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n\r\n      {/* File Upload */}\r\n      <input type=\"file\" onChange={handleFileUpload} />\r\n\r\n      {/* Display filtered products */}\r\n      <ul>\r\n        {filteredProducts.map((product, index) => (\r\n          <li key={index}>\r\n            {product.Product_Name} - {product.Quantity} - {product.Point_Cost}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelSearch;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}